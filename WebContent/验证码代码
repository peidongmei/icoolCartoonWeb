	private char chars[] = "abcdefghijklmnopqrstuvwxyz0123456789".toCharArray();
	Random random = new Random();
	
	public String getRandomString(int length) {
		StringBuilder sb = new StringBuilder();
		for (int i = 0; i < length; i++) {
			sb.append(chars[random.nextInt(chars.length)]);
		}
		return sb.toString();
	}
	
	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		String vc = getRandomString(4);
		req.getSession().setAttribute("vc", vc);
		resp.setContentType("image/jpeg");
		resp.setHeader("Pragma", "No-cache");
		resp.setHeader("Cache-Control", "No-cache");
		resp.setDateHeader("Expires", 0);
		//获取多彩图像
		BufferedImage image = getImage(100, 30, vc);
		ImageIO.write(image, "JPEG", resp.getOutputStream());
	}
	
	public BufferedImage getImage(int width,int height,String vc) {
		BufferedImage image = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
		Graphics g = image.getGraphics();
//		设置背景颜色
		g.setColor(new Color(random.nextInt(255), random.nextInt(255), random.nextInt(255)));
		g.fillRect(0, 0, width, height);
		for (int i = 0; i < vc.length(); i++) {
			g.setFont(new Font("宋体", Font.BOLD, 40));
			g.setColor(new Color(random.nextInt(255), random.nextInt(255), random.nextInt(255)));
			g.drawChars(vc.toCharArray(), i, 1, i*25, 30);
		}
		return image;
	}